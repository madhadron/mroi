/*
    This file is part of Mroi, an ImageJ plugin to handle multiple regions
    of interest in image stacks.
    Copyright (C) 2007 Frederick Ross

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

package mroi.geometry;

import ij.gui.PolygonRoi;
import ij.gui.Roi;

import java.lang.reflect.Array;

import com.vividsolutions.jts.geom.Coordinate;
import com.vividsolutions.jts.geom.Geometry;
import com.vividsolutions.jts.geom.GeometryFactory;

public class GeometryUtilities {
	static public GeometryFactory gfact = new GeometryFactory();

	public static Geometry roiToGeom(Roi r) {
		java.awt.Polygon p = r.getPolygon();
		Coordinate[] cs = (Coordinate[]) Array.newInstance(Coordinate.class, p.npoints+1);
	    for (int i = 0; i < p.npoints; i++) {
	    	cs[i] = new Coordinate(p.xpoints[i], p.ypoints[i]);
	    }
	    cs[p.npoints] = new Coordinate(p.xpoints[0], p.ypoints[0]);
	    Geometry g = gfact.createPolygon(gfact.createLinearRing(cs), null);
	    return g.normalize();
	}
	
	public static Roi geomToRoi(Geometry g) {
		Coordinate[] cs = g.getCoordinates();
		int n = cs.length - 1;
		int[] xs = new int[n];
		int[] ys = new int[n];
		for (int i = 0; i < n; i++) {
			xs[i] = (int)cs[i].x;
			ys[i] = (int)cs[i].y;
		}
		return new PolygonRoi(xs, ys, n, PolygonRoi.POLYGON);
	}
}
